<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="listenWord.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /nMfgT8Wgf8DeOeecACJzQUAAAAASUVORK5CYII=
</value>
  </data>
</root>